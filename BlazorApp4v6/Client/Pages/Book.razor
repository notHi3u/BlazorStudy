@page "/book"
@page "/book/{id:int}"
@using BlazorApp4v6.Client.Services;
@using BlazorApp4v6.Shared.Models;
@inject IBookService bookService
@inject NavigationManager nav

@if (Id == null)
{
    <PageTitle>AddBook</PageTitle>
    <h3>AddBook</h3>
}
else
{
    <PageTitle>EditBook</PageTitle>
    <h3>Edit Book</h3>
}
<EditForm Model="@book">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputText placeholder="Book Name" @bind-Value="book.Name" class="form-control"></InputText>
    <InputText placeholder="Book Author" @bind-Value="book.Author" class="form-control"></InputText>
    <button @onclick="SubmitBook">@btnText</button>
    <button @onclick="CancelAction">Cancel</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;
    BookUI book = new BookUI();

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Add" : "Update";

    }
    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            book = await bookService.GetBookId(Id.Value);
        }
    }
    async Task SubmitBook()
    {
        if (Id == null)
        {
            var result = await bookService.AddBook(book);
            if (result == true)
            {
                nav.NavigateTo("/bookmain", true);
            }
        }
        else
        {
            var result = await bookService.UpdateBook(book);
            if (result == true)
            {
                nav.NavigateTo("/bookmain", true);
            }
        }
    }
    async Task CancelAction()
    {
        nav.NavigateTo("/bookmain");
    }
}
